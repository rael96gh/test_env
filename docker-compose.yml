services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - ./api:/app  # Mount local code for hot reload
    environment:
      - FLASK_ENV=development  # Enable auto-reload
      - FLASK_DEBUG=1          # Enable debug mode
      - PYTHONUNBUFFERED=1     # Ensure prints show immediately
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  frontend:
    build:
      context: ./frontend-app
      dockerfile: Dockerfile.dev  # Use development Dockerfile
    ports:
      - "80:3000"  # Map port 80 to React dev server port 3000
    volumes:
      - ./frontend-app/src:/app/src  # Mount source code for hot reload
      - ./frontend-app/public:/app/public  # Mount public folder
      - /app/node_modules  # Prevent node_modules from being overwritten
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enable hot reload in Docker
      - WATCHPACK_POLLING=true    # Additional polling for file changes
      - FAST_REFRESH=true         # Enable React Fast Refresh
      - WDS_SOCKET_HOST=localhost # WebSocket host
      - WDS_SOCKET_PORT=80        # WebSocket port (mapped port)
      - WDS_SOCKET_PATH=/ws       # WebSocket path
    depends_on:
      - api
    networks:
      - app-network
    stdin_open: true  # Keep container running
    tty: true        # Allocate pseudo-tty

networks:
  app-network:
    driver: bridge